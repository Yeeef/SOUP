   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(kPROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : kPROGRAM . LexToken(ID,'repeatLoop',1,8)
   yacc.py: 445:Action : Shift and goto state 9
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 435:Stack  : kPROGRAM ID . LexToken(SEMICON,';',1,18)
   yacc.py: 445:Action : Shift and goto state 21
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 435:Stack  : kPROGRAM ID SEMICON . LexToken(kVAR,'var',2,20)
   yacc.py: 471:Action : Reduce rule [program_head -> kPROGRAM ID SEMICON] with ['program','repeatLoop',';'] and goto state 2
   yacc.py: 506:Result : <str @ 0x10d27e970> ('repeatLoop')
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 435:Stack  : program_head . LexToken(kVAR,'var',2,20)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 8
   yacc.py: 548:Result : <NoneType @ 0x10c5e4f78> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : program_head empty . LexToken(kVAR,'var',2,20)
   yacc.py: 471:Action : Reduce rule [const_part -> empty] with [None] and goto state 6
   yacc.py: 506:Result : <NoneType @ 0x10c5e4f78> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 435:Stack  : program_head const_part . LexToken(kVAR,'var',2,20)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 16
   yacc.py: 548:Result : <NoneType @ 0x10c5e4f78> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 435:Stack  : program_head const_part empty . LexToken(kVAR,'var',2,20)
   yacc.py: 471:Action : Reduce rule [type_part -> empty] with [None] and goto state 14
   yacc.py: 506:Result : <NoneType @ 0x10c5e4f78> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : program_head const_part type_part . LexToken(kVAR,'var',2,20)
   yacc.py: 445:Action : Shift and goto state 26
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : program_head const_part type_part kVAR . LexToken(ID,'x',2,24)
   yacc.py: 445:Action : Shift and goto state 70
   yacc.py: 410:
   yacc.py: 411:State  : 70
   yacc.py: 435:Stack  : program_head const_part type_part kVAR ID . LexToken(COLON,':',2,25)
   yacc.py: 471:Action : Reduce rule [name_list -> ID] with ['x'] and goto state 68
   yacc.py: 506:Result : <str @ 0x10c79e768> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 435:Stack  : program_head const_part type_part kVAR name_list . LexToken(COLON,':',2,25)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : program_head const_part type_part kVAR name_list COLON . LexToken(SYS_TYPE,'integer',2,27)
   yacc.py: 445:Action : Shift and goto state 119
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 435:Stack  : program_head const_part type_part kVAR name_list COLON SYS_TYPE . LexToken(SEMICON,';',2,34)
   yacc.py: 471:Action : Reduce rule [simple_type_decl -> SYS_TYPE] with ['integer'] and goto state 116
   yacc.py: 506:Result : <Node @ 0x10d27a588> (<AST.Node object at 0x10d27a588>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 430:Defaulted state 116: Reduce using 22
   yacc.py: 435:Stack  : program_head const_part type_part kVAR name_list COLON simple_type_decl . LexToken(SEMICON,';',2,34)
   yacc.py: 471:Action : Reduce rule [type_decl -> simple_type_decl] with [<Node @ 0x10d27a588>] and goto state 169
   yacc.py: 506:Result : <Node @ 0x10d27a588> (<AST.Node object at 0x10d27a588>)
   yacc.py: 410:
   yacc.py: 411:State  : 169
   yacc.py: 435:Stack  : program_head const_part type_part kVAR name_list COLON type_decl . LexToken(SEMICON,';',2,34)
   yacc.py: 445:Action : Shift and goto state 226
   yacc.py: 410:
   yacc.py: 411:State  : 226
   yacc.py: 435:Stack  : program_head const_part type_part kVAR name_list COLON type_decl SEMICON . LexToken(kBEGIN,'begin',3,36)
   yacc.py: 471:Action : Reduce rule [var_decl -> name_list COLON type_decl SEMICON] with ['x',':',<Node @ 0x10d27a588>,';'] and goto state 67
   yacc.py: 506:Result : <Node @ 0x10ca041d0> (<AST.Node object at 0x10ca041d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 67
   yacc.py: 435:Stack  : program_head const_part type_part kVAR var_decl . LexToken(kBEGIN,'begin',3,36)
   yacc.py: 471:Action : Reduce rule [var_decl_list -> var_decl] with [<Node @ 0x10ca041d0>] and goto state 66
   yacc.py: 506:Result : <Node @ 0x10ca041d0> (<AST.Node object at 0x10ca041d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : program_head const_part type_part kVAR var_decl_list . LexToken(kBEGIN,'begin',3,36)
   yacc.py: 471:Action : Reduce rule [var_part -> kVAR var_decl_list] with ['var',<Node @ 0x10ca041d0>] and goto state 25
   yacc.py: 506:Result : <Node @ 0x10ca041d0> (<AST.Node object at 0x10ca041d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 25
   yacc.py: 435:Stack  : program_head const_part type_part var_part . LexToken(kBEGIN,'begin',3,36)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 61
   yacc.py: 548:Result : <NoneType @ 0x10c5e4f78> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : program_head const_part type_part var_part empty . LexToken(kBEGIN,'begin',3,36)
   yacc.py: 471:Action : Reduce rule [routine_part -> empty] with [None] and goto state 58
   yacc.py: 506:Result : <NoneType @ 0x10c5e4f78> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 58
   yacc.py: 435:Stack  : program_head const_part type_part var_part routine_part . LexToken(kBEGIN,'begin',3,36)
   yacc.py: 471:Action : Reduce rule [routine_head -> const_part type_part var_part routine_part] with [None,None,<Node @ 0x10ca041d0>,None] and goto state 5
   yacc.py: 506:Result : <Node @ 0x10d27a748> (<AST.Node object at 0x10d27a748>)
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : program_head routine_head . LexToken(kBEGIN,'begin',3,36)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 435:Stack  : program_head routine_head kBEGIN . LexToken(ID,'x',4,45)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 24
   yacc.py: 548:Result : <NoneType @ 0x10c5e4f78> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : program_head routine_head kBEGIN empty . LexToken(ID,'x',4,45)
   yacc.py: 471:Action : Reduce rule [stmt_list -> empty] with [None] and goto state 22
   yacc.py: 506:Result : <NoneType @ 0x10c5e4f78> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list . LexToken(ID,'x',4,45)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list ID . LexToken(ASSIGN,':=',4,47)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list ID ASSIGN . LexToken(INTEGER,10,4,50)
   yacc.py: 445:Action : Shift and goto state 74
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list ID ASSIGN INTEGER . LexToken(SEMICON,';',4,52)
   yacc.py: 471:Action : Reduce rule [const_value -> INTEGER] with [10] and goto state 96
   yacc.py: 506:Result : <Node @ 0x10d27a3c8> (<AST.Node object at 0x10d27a3c8>)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list ID ASSIGN const_value . LexToken(SEMICON,';',4,52)
   yacc.py: 471:Action : Reduce rule [factor -> const_value] with [<Node @ 0x10d27a3c8>] and goto state 92
   yacc.py: 506:Result : <Node @ 0x10d27a3c8> (<AST.Node object at 0x10d27a3c8>)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list ID ASSIGN factor . LexToken(SEMICON,';',4,52)
   yacc.py: 471:Action : Reduce rule [term -> factor] with [<Node @ 0x10d27a3c8>] and goto state 90
   yacc.py: 506:Result : <Node @ 0x10d27a3c8> (<AST.Node object at 0x10d27a3c8>)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list ID ASSIGN term . LexToken(SEMICON,';',4,52)
   yacc.py: 471:Action : Reduce rule [expr -> term] with [<Node @ 0x10d27a3c8>] and goto state 89
   yacc.py: 506:Result : <Node @ 0x10d27a3c8> (<AST.Node object at 0x10d27a3c8>)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list ID ASSIGN expr . LexToken(SEMICON,';',4,52)
   yacc.py: 471:Action : Reduce rule [expression -> expr] with [<Node @ 0x10d27a3c8>] and goto state 127
   yacc.py: 506:Result : <Node @ 0x10d27a438> (<AST.Node object at 0x10d27a438>)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list ID ASSIGN expression . LexToken(SEMICON,';',4,52)
   yacc.py: 471:Action : Reduce rule [assign_stmt -> ID ASSIGN expression] with ['x',':=',<Node @ 0x10d27a438>] and goto state 39
   yacc.py: 506:Result : <Node @ 0x10d27a4a8> (<AST.Node object at 0x10d27a4a8>)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list assign_stmt . LexToken(SEMICON,';',4,52)
   yacc.py: 471:Action : Reduce rule [non_label_stmt -> assign_stmt] with [<Node @ 0x10d27a4a8>] and goto state 38
   yacc.py: 506:Result : <Node @ 0x10d27a4a8> (<AST.Node object at 0x10d27a4a8>)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list non_label_stmt . LexToken(SEMICON,';',4,52)
   yacc.py: 471:Action : Reduce rule [stmt -> non_label_stmt] with [<Node @ 0x10d27a4a8>] and goto state 35
   yacc.py: 506:Result : <Node @ 0x10d27a4a8> (<AST.Node object at 0x10d27a4a8>)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list stmt . LexToken(SEMICON,';',4,52)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list stmt SEMICON . LexToken(kREPEAT,'repeat',5,57)
   yacc.py: 471:Action : Reduce rule [stmt_list -> stmt_list stmt SEMICON] with [None,<Node @ 0x10d27a4a8>,';'] and goto state 22
   yacc.py: 506:Result : <Node @ 0x10d27a908> (<AST.Node object at 0x10d27a908>)
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list . LexToken(kREPEAT,'repeat',5,57)
   yacc.py: 445:Action : Shift and goto state 52
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT . LexToken(SYS_PROC,'writeln',6,70)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 24
   yacc.py: 548:Result : <NoneType @ 0x10c5e4f78> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT empty . LexToken(SYS_PROC,'writeln',6,70)
   yacc.py: 471:Action : Reduce rule [stmt_list -> empty] with [None] and goto state 98
   yacc.py: 506:Result : <NoneType @ 0x10c5e4f78> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list . LexToken(SYS_PROC,'writeln',6,70)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list SYS_PROC . LexToken(LP,'(',6,77)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list SYS_PROC LP . LexToken(ID,'x',6,78)
   yacc.py: 445:Action : Shift and goto state 94
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list SYS_PROC LP ID . LexToken(RP,')',6,79)
   yacc.py: 471:Action : Reduce rule [factor -> ID] with ['x'] and goto state 92
   yacc.py: 506:Result : <str @ 0x10c79e768> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list SYS_PROC LP factor . LexToken(RP,')',6,79)
   yacc.py: 471:Action : Reduce rule [term -> factor] with ['x'] and goto state 90
   yacc.py: 506:Result : <str @ 0x10c79e768> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list SYS_PROC LP term . LexToken(RP,')',6,79)
   yacc.py: 471:Action : Reduce rule [expr -> term] with ['x'] and goto state 89
   yacc.py: 506:Result : <str @ 0x10c79e768> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list SYS_PROC LP expr . LexToken(RP,')',6,79)
   yacc.py: 471:Action : Reduce rule [expression -> expr] with ['x'] and goto state 132
   yacc.py: 506:Result : <Node @ 0x10d27a470> (<AST.Node object at 0x10d27a470>)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list SYS_PROC LP expression . LexToken(RP,')',6,79)
   yacc.py: 471:Action : Reduce rule [expression_list -> expression] with [<Node @ 0x10d27a470>] and goto state 131
   yacc.py: 506:Result : <Node @ 0x10d27a470> (<AST.Node object at 0x10d27a470>)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list SYS_PROC LP expression_list . LexToken(RP,')',6,79)
   yacc.py: 445:Action : Shift and goto state 184
   yacc.py: 410:
   yacc.py: 411:State  : 184
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list SYS_PROC LP expression_list RP . LexToken(SEMICON,';',6,80)
   yacc.py: 471:Action : Reduce rule [proc_stmt -> SYS_PROC LP expression_list RP] with ['writeln','(',<Node @ 0x10d27a470>,')'] and goto state 40
   yacc.py: 506:Result : <Node @ 0x10d27a8d0> (<AST.Node object at 0x10d27a8d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list proc_stmt . LexToken(SEMICON,';',6,80)
   yacc.py: 471:Action : Reduce rule [non_label_stmt -> proc_stmt] with [<Node @ 0x10d27a8d0>] and goto state 38
   yacc.py: 506:Result : <Node @ 0x10d27a8d0> (<AST.Node object at 0x10d27a8d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list non_label_stmt . LexToken(SEMICON,';',6,80)
   yacc.py: 471:Action : Reduce rule [stmt -> non_label_stmt] with [<Node @ 0x10d27a8d0>] and goto state 35
   yacc.py: 506:Result : <Node @ 0x10d27a8d0> (<AST.Node object at 0x10d27a8d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list stmt . LexToken(SEMICON,';',6,80)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list stmt SEMICON . LexToken(ID,'x',7,88)
   yacc.py: 471:Action : Reduce rule [stmt_list -> stmt_list stmt SEMICON] with [None,<Node @ 0x10d27a8d0>,';'] and goto state 98
   yacc.py: 506:Result : <Node @ 0x10d27aa90> (<AST.Node object at 0x10d27aa90>)
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list . LexToken(ID,'x',7,88)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID . LexToken(ASSIGN,':=',7,90)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID ASSIGN . LexToken(ID,'x',7,93)
   yacc.py: 445:Action : Shift and goto state 94
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID ASSIGN ID . LexToken(ADD,'+',7,95)
   yacc.py: 471:Action : Reduce rule [factor -> ID] with ['x'] and goto state 92
   yacc.py: 506:Result : <str @ 0x10c79e768> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID ASSIGN factor . LexToken(ADD,'+',7,95)
   yacc.py: 471:Action : Reduce rule [term -> factor] with ['x'] and goto state 90
   yacc.py: 506:Result : <str @ 0x10c79e768> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID ASSIGN term . LexToken(ADD,'+',7,95)
   yacc.py: 471:Action : Reduce rule [expr -> term] with ['x'] and goto state 89
   yacc.py: 506:Result : <str @ 0x10c79e768> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID ASSIGN expr . LexToken(ADD,'+',7,95)
   yacc.py: 445:Action : Shift and goto state 141
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID ASSIGN expr ADD . LexToken(INTEGER,1,7,97)
   yacc.py: 445:Action : Shift and goto state 74
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID ASSIGN expr ADD INTEGER . LexToken(SEMICON,';',7,98)
   yacc.py: 471:Action : Reduce rule [const_value -> INTEGER] with [1] and goto state 96
   yacc.py: 506:Result : <Node @ 0x10c929240> (<AST.Node object at 0x10c929240>)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID ASSIGN expr ADD const_value . LexToken(SEMICON,';',7,98)
   yacc.py: 471:Action : Reduce rule [factor -> const_value] with [<Node @ 0x10c929240>] and goto state 92
   yacc.py: 506:Result : <Node @ 0x10c929240> (<AST.Node object at 0x10c929240>)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID ASSIGN expr ADD factor . LexToken(SEMICON,';',7,98)
   yacc.py: 471:Action : Reduce rule [term -> factor] with [<Node @ 0x10c929240>] and goto state 194
   yacc.py: 506:Result : <Node @ 0x10c929240> (<AST.Node object at 0x10c929240>)
   yacc.py: 410:
   yacc.py: 411:State  : 194
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID ASSIGN expr ADD term . LexToken(SEMICON,';',7,98)
   yacc.py: 471:Action : Reduce rule [expr -> expr ADD term] with ['x','+',<Node @ 0x10c929240>] and goto state 89
   yacc.py: 506:Result : <Node @ 0x10d27ac50> (<AST.Node object at 0x10d27ac50>)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID ASSIGN expr . LexToken(SEMICON,';',7,98)
   yacc.py: 471:Action : Reduce rule [expression -> expr] with [<Node @ 0x10d27ac50>] and goto state 127
   yacc.py: 506:Result : <Node @ 0x10d27ab38> (<AST.Node object at 0x10d27ab38>)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list ID ASSIGN expression . LexToken(SEMICON,';',7,98)
   yacc.py: 471:Action : Reduce rule [assign_stmt -> ID ASSIGN expression] with ['x',':=',<Node @ 0x10d27ab38>] and goto state 39
   yacc.py: 506:Result : <Node @ 0x10d27a940> (<AST.Node object at 0x10d27a940>)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list assign_stmt . LexToken(SEMICON,';',7,98)
   yacc.py: 471:Action : Reduce rule [non_label_stmt -> assign_stmt] with [<Node @ 0x10d27a940>] and goto state 38
   yacc.py: 506:Result : <Node @ 0x10d27a940> (<AST.Node object at 0x10d27a940>)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list non_label_stmt . LexToken(SEMICON,';',7,98)
   yacc.py: 471:Action : Reduce rule [stmt -> non_label_stmt] with [<Node @ 0x10d27a940>] and goto state 35
   yacc.py: 506:Result : <Node @ 0x10d27a940> (<AST.Node object at 0x10d27a940>)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list stmt . LexToken(SEMICON,';',7,98)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list stmt SEMICON . LexToken(kUNTIL,'until',8,103)
   yacc.py: 471:Action : Reduce rule [stmt_list -> stmt_list stmt SEMICON] with [<Node @ 0x10d27aa90>,<Node @ 0x10d27a940>,';'] and goto state 98
   yacc.py: 506:Result : <Node @ 0x10d27ae10> (<AST.Node object at 0x10d27ae10>)
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list . LexToken(kUNTIL,'until',8,103)
   yacc.py: 445:Action : Shift and goto state 156
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL . LexToken(ID,'x',8,109)
   yacc.py: 445:Action : Shift and goto state 94
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL ID . LexToken(EQUAL,'=',8,111)
   yacc.py: 471:Action : Reduce rule [factor -> ID] with ['x'] and goto state 92
   yacc.py: 506:Result : <str @ 0x10c79e768> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL factor . LexToken(EQUAL,'=',8,111)
   yacc.py: 471:Action : Reduce rule [term -> factor] with ['x'] and goto state 90
   yacc.py: 506:Result : <str @ 0x10c79e768> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL term . LexToken(EQUAL,'=',8,111)
   yacc.py: 471:Action : Reduce rule [expr -> term] with ['x'] and goto state 89
   yacc.py: 506:Result : <str @ 0x10c79e768> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL expr . LexToken(EQUAL,'=',8,111)
   yacc.py: 471:Action : Reduce rule [expression -> expr] with ['x'] and goto state 207
   yacc.py: 506:Result : <Node @ 0x10d27a828> (<AST.Node object at 0x10d27a828>)
   yacc.py: 410:
   yacc.py: 411:State  : 207
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL expression . LexToken(EQUAL,'=',8,111)
   yacc.py: 445:Action : Shift and goto state 139
   yacc.py: 410:
   yacc.py: 411:State  : 139
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL expression EQUAL . LexToken(INTEGER,31,8,113)
   yacc.py: 445:Action : Shift and goto state 74
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL expression EQUAL INTEGER . LexToken(SEMICON,';',8,115)
   yacc.py: 471:Action : Reduce rule [const_value -> INTEGER] with [31] and goto state 96
   yacc.py: 506:Result : <Node @ 0x10d27ad68> (<AST.Node object at 0x10d27ad68>)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL expression EQUAL const_value . LexToken(SEMICON,';',8,115)
   yacc.py: 471:Action : Reduce rule [factor -> const_value] with [<Node @ 0x10d27ad68>] and goto state 92
   yacc.py: 506:Result : <Node @ 0x10d27ad68> (<AST.Node object at 0x10d27ad68>)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL expression EQUAL factor . LexToken(SEMICON,';',8,115)
   yacc.py: 471:Action : Reduce rule [term -> factor] with [<Node @ 0x10d27ad68>] and goto state 90
   yacc.py: 506:Result : <Node @ 0x10d27ad68> (<AST.Node object at 0x10d27ad68>)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL expression EQUAL term . LexToken(SEMICON,';',8,115)
   yacc.py: 471:Action : Reduce rule [expr -> term] with [<Node @ 0x10d27ad68>] and goto state 192
   yacc.py: 506:Result : <Node @ 0x10d27ad68> (<AST.Node object at 0x10d27ad68>)
   yacc.py: 410:
   yacc.py: 411:State  : 192
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL expression EQUAL expr . LexToken(SEMICON,';',8,115)
   yacc.py: 471:Action : Reduce rule [expression -> expression EQUAL expr] with [<Node @ 0x10d27a828>,'=',<Node @ 0x10d27ad68>] and goto state 207
   yacc.py: 506:Result : <Node @ 0x10d27ada0> (<AST.Node object at 0x10d27ada0>)
   yacc.py: 410:
   yacc.py: 411:State  : 207
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kREPEAT stmt_list kUNTIL expression . LexToken(SEMICON,';',8,115)
   yacc.py: 471:Action : Reduce rule [repeat_stmt -> kREPEAT stmt_list kUNTIL expression] with ['repeat',<Node @ 0x10d27ae10>,'until',<Node @ 0x10d27ada0>] and goto state 43
   yacc.py: 506:Result : <Node @ 0x10d27aac8> (<AST.Node object at 0x10d27aac8>)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list repeat_stmt . LexToken(SEMICON,';',8,115)
   yacc.py: 471:Action : Reduce rule [non_label_stmt -> repeat_stmt] with [<Node @ 0x10d27aac8>] and goto state 38
   yacc.py: 506:Result : <Node @ 0x10d27aac8> (<AST.Node object at 0x10d27aac8>)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list non_label_stmt . LexToken(SEMICON,';',8,115)
   yacc.py: 471:Action : Reduce rule [stmt -> non_label_stmt] with [<Node @ 0x10d27aac8>] and goto state 35
   yacc.py: 506:Result : <Node @ 0x10d27aac8> (<AST.Node object at 0x10d27aac8>)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list stmt . LexToken(SEMICON,';',8,115)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list stmt SEMICON . LexToken(kEND,'end',9,117)
   yacc.py: 471:Action : Reduce rule [stmt_list -> stmt_list stmt SEMICON] with [<Node @ 0x10d27a908>,<Node @ 0x10d27aac8>,';'] and goto state 22
   yacc.py: 506:Result : <Node @ 0x10d27acc0> (<AST.Node object at 0x10d27acc0>)
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list . LexToken(kEND,'end',9,117)
   yacc.py: 445:Action : Shift and goto state 34
   yacc.py: 410:
   yacc.py: 411:State  : 34
   yacc.py: 435:Stack  : program_head routine_head kBEGIN stmt_list kEND . LexToken(DOT,'.',9,120)
   yacc.py: 471:Action : Reduce rule [compound_stmt -> kBEGIN stmt_list kEND] with ['begin',<Node @ 0x10d27acc0>,'end'] and goto state 12
   yacc.py: 506:Result : <Node @ 0x10d27acc0> (<AST.Node object at 0x10d27acc0>)
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 435:Stack  : program_head routine_head compound_stmt . LexToken(DOT,'.',9,120)
   yacc.py: 471:Action : Reduce rule [routine_body -> compound_stmt] with [<Node @ 0x10d27acc0>] and goto state 11
   yacc.py: 506:Result : <Node @ 0x10d27acc0> (<AST.Node object at 0x10d27acc0>)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : program_head routine_head routine_body . LexToken(DOT,'.',9,120)
   yacc.py: 471:Action : Reduce rule [routine -> routine_head routine_body] with [<Node @ 0x10d27a748>,<Node @ 0x10d27acc0>] and goto state 4
   yacc.py: 506:Result : <Node @ 0x10d27aba8> (<AST.Node object at 0x10d27aba8>)
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 435:Stack  : program_head routine . LexToken(DOT,'.',9,120)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 430:Defaulted state 10: Reduce using 1
   yacc.py: 435:Stack  : program_head routine DOT . None
   yacc.py: 471:Action : Reduce rule [program -> program_head routine DOT] with ['repeatLoop',<Node @ 0x10d27aba8>,'.'] and goto state 1
   yacc.py: 506:Result : <Node @ 0x10d27a4e0> (<AST.Node object at 0x10d27a4e0>)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 435:Stack  : program . $end
   yacc.py: 571:Done   : Returning <Node @ 0x10d27a4e0> (<AST.Node object at 0x10d27a4e0>)
   yacc.py: 572:PLY: PARSE DEBUG END
